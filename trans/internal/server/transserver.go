// Code generated by goctl. DO NOT EDIT!
// Source: trans.proto

package server

import (
	"context"

	"tcc/trans/internal/logic"
	"tcc/trans/internal/svc"
	"tcc/trans/trans"
)

type TransServer struct {
	svcCtx *svc.ServiceContext
	trans.UnimplementedTransServer
}

func NewTransServer(svcCtx *svc.ServiceContext) *TransServer {
	return &TransServer{
		svcCtx: svcCtx,
	}
}

func (s *TransServer) TransOutTry(ctx context.Context, in *trans.AdjustInfo) (*trans.Response, error) {
	l := logic.NewTransOutTryLogic(ctx, s.svcCtx)
	return l.TransOutTry(in)
}

func (s *TransServer) TransOutConfirm(ctx context.Context, in *trans.AdjustInfo) (*trans.Response, error) {
	l := logic.NewTransOutConfirmLogic(ctx, s.svcCtx)
	return l.TransOutConfirm(in)
}

func (s *TransServer) TransOutCancel(ctx context.Context, in *trans.AdjustInfo) (*trans.Response, error) {
	l := logic.NewTransOutCancelLogic(ctx, s.svcCtx)
	return l.TransOutCancel(in)
}

func (s *TransServer) TransInTry(ctx context.Context, in *trans.AdjustInfo) (*trans.Response, error) {
	l := logic.NewTransInTryLogic(ctx, s.svcCtx)
	return l.TransInTry(in)
}

func (s *TransServer) TransInConfirm(ctx context.Context, in *trans.AdjustInfo) (*trans.Response, error) {
	l := logic.NewTransInConfirmLogic(ctx, s.svcCtx)
	return l.TransInConfirm(in)
}

func (s *TransServer) TransInCancel(ctx context.Context, in *trans.AdjustInfo) (*trans.Response, error) {
	l := logic.NewTransInCancelLogic(ctx, s.svcCtx)
	return l.TransInCancel(in)
}
